# Generated by Django 4.2.16 on 2024-11-17 09:21

from django.conf import settings
import django.contrib.postgres.indexes
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid
import wger.exercises.models.image
import wger.exercises.models.video
import wger.utils.helpers
import wger.utils.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeletionLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_type', models.CharField(choices=[('base', 'base'), ('translation', 'translation'), ('image', 'image'), ('video', 'video')], max_length=11)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('replaced_by', models.UUIDField(default=None, editable=False, help_text='UUID of the object replaced by the deleted one. At the moment only available for exercise bases', null=True, verbose_name='Replaced by')),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('comment', models.CharField(default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_title', models.CharField(blank=True, max_length=300, verbose_name='The original title of this object, if available')),
                ('license_object_url', models.URLField(blank=True, verbose_name='Link to original object, if available')),
                ('license_author', models.TextField(blank=True, help_text='If you are not the author, enter the name or source here.', max_length=3500, null=True, verbose_name='Author(s)')),
                ('license_author_url', models.URLField(blank=True, verbose_name='Link to author profile, if available')),
                ('license_derivative_source_url', models.URLField(blank=True, help_text='Note that a derivative work is one which is not only based on a previous work, but which also contains sufficient new, creative content to entitle it to its own copyright.', verbose_name='Link to the original source, if this is a derivative work')),
                ('description', models.TextField(max_length=2000, validators=[django.core.validators.MinLengthValidator(40)], verbose_name='Description')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Date')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
            ],
            options={
                'ordering': ['name'],
                'base_manager_name': 'objects',
            },
            bases=(wger.utils.models.AbstractHistoryMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ExerciseBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_title', models.CharField(blank=True, max_length=300, verbose_name='The original title of this object, if available')),
                ('license_object_url', models.URLField(blank=True, verbose_name='Link to original object, if available')),
                ('license_author', models.TextField(blank=True, help_text='If you are not the author, enter the name or source here.', max_length=3500, null=True, verbose_name='Author(s)')),
                ('license_author_url', models.URLField(blank=True, verbose_name='Link to author profile, if available')),
                ('license_derivative_source_url', models.URLField(blank=True, help_text='Note that a derivative work is one which is not only based on a previous work, but which also contains sufficient new, creative content to entitle it to its own copyright.', verbose_name='Link to the original source, if this is a derivative work')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Date')),
            ],
            options={
                'abstract': False,
            },
            bases=(wger.utils.models.AbstractHistoryMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ExerciseCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
            options={
                'verbose_name_plural': 'Exercise Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Muscle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='In latin, e.g. "Pectoralis major"', max_length=50, verbose_name='Name')),
                ('is_front', models.BooleanField(default=1)),
                ('name_en', models.CharField(default='', help_text='A more basic name for the muscle', max_length=50, verbose_name='Alternative name')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Variation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalExerciseVideo',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('license_title', models.CharField(blank=True, max_length=300, verbose_name='The original title of this object, if available')),
                ('license_object_url', models.URLField(blank=True, verbose_name='Link to original object, if available')),
                ('license_author', models.TextField(blank=True, help_text='If you are not the author, enter the name or source here.', max_length=3500, null=True, verbose_name='Author(s)')),
                ('license_author_url', models.URLField(blank=True, verbose_name='Link to author profile, if available')),
                ('license_derivative_source_url', models.URLField(blank=True, help_text='Note that a derivative work is one which is not only based on a previous work, but which also contains sufficient new, creative content to entitle it to its own copyright.', verbose_name='Link to the original source, if this is a derivative work')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='UUID')),
                ('is_main', models.BooleanField(default=False, verbose_name='Main video')),
                ('video', models.TextField(max_length=100, validators=[wger.exercises.models.video.validate_video], verbose_name='Video')),
                ('size', models.IntegerField(default=0, editable=False, verbose_name='Size')),
                ('duration', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=12, verbose_name='Duration')),
                ('width', models.IntegerField(default=0, editable=False, verbose_name='Width')),
                ('height', models.IntegerField(default=0, editable=False, verbose_name='Height')),
                ('codec', models.CharField(default='', editable=False, max_length=30, verbose_name='Codec')),
                ('codec_long', models.CharField(default='', editable=False, max_length=100, verbose_name='Codec, long name')),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='Date')),
                ('last_update', models.DateTimeField(blank=True, editable=False, verbose_name='Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('exercise_base', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='exercises.exercisebase', verbose_name='Exercise')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('license', models.ForeignKey(blank=True, db_constraint=False, default=2, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.license', verbose_name='License')),
            ],
            options={
                'verbose_name': 'historical exercise video',
                'verbose_name_plural': 'historical exercise videos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalExerciseImage',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('license_title', models.CharField(blank=True, max_length=300, verbose_name='The original title of this object, if available')),
                ('license_object_url', models.URLField(blank=True, verbose_name='Link to original object, if available')),
                ('license_author', models.TextField(blank=True, help_text='If you are not the author, enter the name or source here.', max_length=3500, null=True, verbose_name='Author(s)')),
                ('license_author_url', models.URLField(blank=True, verbose_name='Link to author profile, if available')),
                ('license_derivative_source_url', models.URLField(blank=True, help_text='Note that a derivative work is one which is not only based on a previous work, but which also contains sufficient new, creative content to entitle it to its own copyright.', verbose_name='Link to the original source, if this is a derivative work')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='UUID')),
                ('image', models.TextField(help_text='Only PNG and JPEG formats are supported', max_length=100, verbose_name='Image')),
                ('is_main', models.BooleanField(default=False, help_text='Tick the box if you want to set this image as the main one for the exercise (will be shown e.g. in the search). The first image is automatically marked by the system.', verbose_name='Main picture')),
                ('style', models.CharField(choices=[('1', 'Line'), ('2', '3D'), ('3', 'Low-poly'), ('4', 'Photo'), ('5', 'Other')], default='4', help_text='The art style of your image', max_length=1)),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='Date')),
                ('last_update', models.DateTimeField(blank=True, editable=False, verbose_name='Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('exercise_base', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='exercises.exercisebase', verbose_name='Exercise')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('license', models.ForeignKey(blank=True, db_constraint=False, default=2, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.license', verbose_name='License')),
            ],
            options={
                'verbose_name': 'historical exercise image',
                'verbose_name_plural': 'historical exercise images',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalExerciseComment',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='UUID')),
                ('comment', models.CharField(help_text='A comment about how to correctly do this exercise.', max_length=200, verbose_name='Comment')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('exercise', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='exercises.exercise', verbose_name='Exercise')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical exercise comment',
                'verbose_name_plural': 'historical exercise comments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalExerciseBase',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('license_title', models.CharField(blank=True, max_length=300, verbose_name='The original title of this object, if available')),
                ('license_object_url', models.URLField(blank=True, verbose_name='Link to original object, if available')),
                ('license_author', models.TextField(blank=True, help_text='If you are not the author, enter the name or source here.', max_length=3500, null=True, verbose_name='Author(s)')),
                ('license_author_url', models.URLField(blank=True, verbose_name='Link to author profile, if available')),
                ('license_derivative_source_url', models.URLField(blank=True, help_text='Note that a derivative work is one which is not only based on a previous work, but which also contains sufficient new, creative content to entitle it to its own copyright.', verbose_name='Link to the original source, if this is a derivative work')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='UUID')),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='Date')),
                ('last_update', models.DateTimeField(blank=True, editable=False, verbose_name='Date')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='exercises.exercisecategory', verbose_name='Category')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('license', models.ForeignKey(blank=True, db_constraint=False, default=2, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.license', verbose_name='License')),
                ('variations', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='exercises.variation', verbose_name='Variations')),
            ],
            options={
                'verbose_name': 'historical exercise base',
                'verbose_name_plural': 'historical exercise bases',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalExercise',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('license_title', models.CharField(blank=True, max_length=300, verbose_name='The original title of this object, if available')),
                ('license_object_url', models.URLField(blank=True, verbose_name='Link to original object, if available')),
                ('license_author', models.TextField(blank=True, help_text='If you are not the author, enter the name or source here.', max_length=3500, null=True, verbose_name='Author(s)')),
                ('license_author_url', models.URLField(blank=True, verbose_name='Link to author profile, if available')),
                ('license_derivative_source_url', models.URLField(blank=True, help_text='Note that a derivative work is one which is not only based on a previous work, but which also contains sufficient new, creative content to entitle it to its own copyright.', verbose_name='Link to the original source, if this is a derivative work')),
                ('description', models.TextField(max_length=2000, validators=[django.core.validators.MinLengthValidator(40)], verbose_name='Description')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('created', models.DateTimeField(blank=True, editable=False, verbose_name='Date')),
                ('last_update', models.DateTimeField(blank=True, editable=False, verbose_name='Date')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='UUID')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('exercise_base', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='exercises.exercisebase', verbose_name='ExerciseBase')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('language', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.language', verbose_name='Language')),
                ('license', models.ForeignKey(blank=True, db_constraint=False, default=2, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.license', verbose_name='License')),
            ],
            options={
                'verbose_name': 'historical exercise',
                'verbose_name_plural': 'historical exercises',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAlias',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, verbose_name='UUID')),
                ('alias', models.CharField(max_length=200, verbose_name='Alias for an exercise')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('exercise', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='exercises.exercise', verbose_name='Exercise')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical alias',
                'verbose_name_plural': 'historical aliass',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ExerciseVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_title', models.CharField(blank=True, max_length=300, verbose_name='The original title of this object, if available')),
                ('license_object_url', models.URLField(blank=True, verbose_name='Link to original object, if available')),
                ('license_author', models.TextField(blank=True, help_text='If you are not the author, enter the name or source here.', max_length=3500, null=True, verbose_name='Author(s)')),
                ('license_author_url', models.URLField(blank=True, verbose_name='Link to author profile, if available')),
                ('license_derivative_source_url', models.URLField(blank=True, help_text='Note that a derivative work is one which is not only based on a previous work, but which also contains sufficient new, creative content to entitle it to its own copyright.', verbose_name='Link to the original source, if this is a derivative work')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('is_main', models.BooleanField(default=False, verbose_name='Main video')),
                ('video', models.FileField(upload_to=wger.exercises.models.video.exercise_video_upload_dir, validators=[wger.exercises.models.video.validate_video], verbose_name='Video')),
                ('size', models.IntegerField(default=0, editable=False, verbose_name='Size')),
                ('duration', models.DecimalField(decimal_places=2, default=0, editable=False, max_digits=12, verbose_name='Duration')),
                ('width', models.IntegerField(default=0, editable=False, verbose_name='Width')),
                ('height', models.IntegerField(default=0, editable=False, verbose_name='Height')),
                ('codec', models.CharField(default='', editable=False, max_length=30, verbose_name='Codec')),
                ('codec_long', models.CharField(default='', editable=False, max_length=100, verbose_name='Codec, long name')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Date')),
                ('exercise_base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exercises.exercisebase', verbose_name='Exercise')),
                ('license', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='core.license', verbose_name='License')),
            ],
            options={
                'ordering': ['-is_main', 'id'],
            },
            bases=(wger.utils.models.AbstractHistoryMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ExerciseImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_title', models.CharField(blank=True, max_length=300, verbose_name='The original title of this object, if available')),
                ('license_object_url', models.URLField(blank=True, verbose_name='Link to original object, if available')),
                ('license_author', models.TextField(blank=True, help_text='If you are not the author, enter the name or source here.', max_length=3500, null=True, verbose_name='Author(s)')),
                ('license_author_url', models.URLField(blank=True, verbose_name='Link to author profile, if available')),
                ('license_derivative_source_url', models.URLField(blank=True, help_text='Note that a derivative work is one which is not only based on a previous work, but which also contains sufficient new, creative content to entitle it to its own copyright.', verbose_name='Link to the original source, if this is a derivative work')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('image', models.ImageField(help_text='Only PNG and JPEG formats are supported', upload_to=wger.exercises.models.image.exercise_image_upload_dir, verbose_name='Image')),
                ('is_main', models.BooleanField(default=False, help_text='Tick the box if you want to set this image as the main one for the exercise (will be shown e.g. in the search). The first image is automatically marked by the system.', verbose_name='Main picture')),
                ('style', models.CharField(choices=[('1', 'Line'), ('2', '3D'), ('3', 'Low-poly'), ('4', 'Photo'), ('5', 'Other')], default='4', help_text='The art style of your image', max_length=1)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='Date')),
                ('exercise_base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exercises.exercisebase', verbose_name='Exercise')),
                ('license', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='core.license', verbose_name='License')),
            ],
            options={
                'ordering': ['-is_main', 'id'],
                'base_manager_name': 'objects',
            },
            bases=(wger.utils.models.AbstractHistoryMixin, models.Model, wger.utils.helpers.BaseImage),
        ),
        migrations.CreateModel(
            name='ExerciseComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('comment', models.CharField(help_text='A comment about how to correctly do this exercise.', max_length=200, verbose_name='Comment')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exercises.exercise', verbose_name='Exercise')),
            ],
        ),
        migrations.AddField(
            model_name='exercisebase',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exercises.exercisecategory', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='exercisebase',
            name='equipment',
            field=models.ManyToManyField(blank=True, to='exercises.equipment', verbose_name='Equipment'),
        ),
        migrations.AddField(
            model_name='exercisebase',
            name='license',
            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='core.license', verbose_name='License'),
        ),
        migrations.AddField(
            model_name='exercisebase',
            name='muscles',
            field=models.ManyToManyField(blank=True, to='exercises.muscle', verbose_name='Primary muscles'),
        ),
        migrations.AddField(
            model_name='exercisebase',
            name='muscles_secondary',
            field=models.ManyToManyField(blank=True, related_name='secondary_muscles_base', to='exercises.muscle', verbose_name='Secondary muscles'),
        ),
        migrations.AddField(
            model_name='exercisebase',
            name='variations',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='exercises.variation', verbose_name='Variations'),
        ),
        migrations.AddField(
            model_name='exercise',
            name='exercise_base',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='exercises.exercisebase', verbose_name='ExerciseBase'),
        ),
        migrations.AddField(
            model_name='exercise',
            name='language',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.language', verbose_name='Language'),
        ),
        migrations.AddField(
            model_name='exercise',
            name='license',
            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='core.license', verbose_name='License'),
        ),
        migrations.CreateModel(
            name='Alias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='UUID')),
                ('alias', models.CharField(max_length=200, verbose_name='Alias for an exercise')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exercises.exercise', verbose_name='Exercise')),
            ],
        ),
        migrations.AddIndex(
            model_name='exercise',
            index=django.contrib.postgres.indexes.GinIndex(fields=['name'], name='exercises_e_name_ac11f4_gin'),
        ),
        migrations.AddIndex(
            model_name='alias',
            index=django.contrib.postgres.indexes.GinIndex(fields=['alias'], name='exercises_a_alias_227e38_gin'),
        ),
    ]
